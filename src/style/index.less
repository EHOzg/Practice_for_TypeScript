// 设置变量
/*这种注释，编译后会出现在css文件上*/
@bg-color: #b7d4a8;
// 清除默认样式
* {
  margin: 0;
  padding: 0;
  // 改变盒子模型计算方式
  box-sizing: border-box;
}

body {
  font: bold 20px 'Courier';
}

// 设置主窗口样式
#main {
  width: 360px;
  height: 420px;
  // 设置背景颜色
  background-color: @bg-color;
  // 位置下一点 水平居中
  margin: 100px auto;
  border: 10px solid black;
  border-radius: 10px;

  // 开启弹性盒模型
  display: flex;
  // 设置主轴的方向:自上向下排列
  flex-flow: column;
  // 侧轴居中
  align-items: center;
  // 主轴
  justify-content: space-around;

  // 游戏舞台
  #stage {
    width: 304px;
    height: 304px;
    border: 2px solid black;
    // 开启相对定位
    position: relative;

    // ! 设置蛇的样式是给里面的元素设置 而非父元素本身
    #snake {
      & > div {
        // ! 注意蛇的总大小就是 10 * 10
        width: 10px;
        height: 10px;
        background-color: #000;
        // 让蛇的身体有缝隙
        border: 1px solid @bg-color;
        // 开启绝对定位
        position: absolute;
      }
    }
    #food {
      width: 10px;
      height: 10px;
      // ! 食物和蛇 重叠了
      position: absolute;
      left: 40px;
      top: 100px;
      // 弹性和
      display: flex;
      // 设置横轴为主轴，wrap表示会自动换行
      flex-flow: row wrap;
      // 设置主轴和侧轴的空白空间分配到元素之间
      justify-content: space-between;
      align-content: space-between;

      & > div {
        width: 4px;
        height: 4px;
        background-color: black;
        // 使4个div旋转45度
        transform: rotate(45deg);
      }
    }
  }

  // 记分牌
  #score-panel {
    width: 300px;
    display: flex;
    // 主轴对齐方式
    justify-content: space-between;
  }
}
