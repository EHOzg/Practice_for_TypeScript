{
  /**
   * * include:用来指定那些TS文件需要被编译
   * * '**'表示任意目录， '*' 表示任意文件
   *
   * * exclude:不需要编译的文件(一般不需要设置)
   * * 默认值：["node_modules","bower_components","jspm_packages"]
   *
   * * extend:继承
   *
   * * files: ["",""...],单独将需要编译的文件名放入数组
   *
   * ! 最重要部分： compilerOptions:
   */
  "include": ["./src/**/*"],
  "exclude": ["./src/hello/**/*"],
  "compilerOptions": {
    // 用来指定ts被编译为的ES的版本
    //  Argument for '--target' option must be: 'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022', 'esnext'.
    "target": "ES6",
    // 指定要使用的模块化的规范 ES2022、CommonJS...
    // Argument for '--module' option must be: 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'es2022', 'esnext', 'node16', 'nodeNext'.
    "module": "ES6",
    // lib 用来指定项目中要使用的库,一般不修改，注释掉，
    // "lib": []
    // 用来指定编译后文件所在的目录
    "outDir": "./dist",
    // Only 'amd' and 'system' modules are supported alongside --outFile.
    // 模块化必须是 上面两种
    // "outFile": "./dist/app.js",
    // 是否对js文件编译 boolean, 默认 false
    "allowJs": true,
    // 是否检查js代码是否符合语法规范 默认 false
    "checkJs": true,
    // 是否移除注释
    "removeComments": true,
    // 不生成编译后的文件
    "noEmit": false,
    // 当有错误时不生成编译文件
    "noEmitOnError": true,
    // 默认不执行严格
    // 当你的代码中含有import export 导入导出时，此属性自动打开，也不会再出现"use strict"字样
    "alwaysStrict": true,
    //  所有严格检查的总开关 noImplicitAny\ noImplicitThis\ strictNullChecks 无需再设置
    "strict": false,
    // Any 类型
    // 非主动 使用any 即隐式any TS并不会出现任何报错，此时noImplicitAny 为 true 即不允许有任何的隐式any
    "noImplicitAny": true,
    // 不允许不明确类型的this
    // 'this' implicitly has type 'any' because it does not have a type annotation.
    "noImplicitThis": true,
    // 严格的检查空值
    // 'box1' is possibly 'null'.
    "strictNullChecks": true
  }
}
